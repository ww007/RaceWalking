package ww.greendao.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import ww.greendao.dao.dl_referee;
import ww.greendao.dao.pf_athlete;
import ww.greendao.dao.pf_group;
import ww.greendao.dao.pf_foul;

import ww.greendao.dao.dl_refereeDao;
import ww.greendao.dao.pf_athleteDao;
import ww.greendao.dao.pf_groupDao;
import ww.greendao.dao.pf_foulDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dl_refereeDaoConfig;
    private final DaoConfig pf_athleteDaoConfig;
    private final DaoConfig pf_groupDaoConfig;
    private final DaoConfig pf_foulDaoConfig;

    private final dl_refereeDao dl_refereeDao;
    private final pf_athleteDao pf_athleteDao;
    private final pf_groupDao pf_groupDao;
    private final pf_foulDao pf_foulDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dl_refereeDaoConfig = daoConfigMap.get(dl_refereeDao.class).clone();
        dl_refereeDaoConfig.initIdentityScope(type);

        pf_athleteDaoConfig = daoConfigMap.get(pf_athleteDao.class).clone();
        pf_athleteDaoConfig.initIdentityScope(type);

        pf_groupDaoConfig = daoConfigMap.get(pf_groupDao.class).clone();
        pf_groupDaoConfig.initIdentityScope(type);

        pf_foulDaoConfig = daoConfigMap.get(pf_foulDao.class).clone();
        pf_foulDaoConfig.initIdentityScope(type);

        dl_refereeDao = new dl_refereeDao(dl_refereeDaoConfig, this);
        pf_athleteDao = new pf_athleteDao(pf_athleteDaoConfig, this);
        pf_groupDao = new pf_groupDao(pf_groupDaoConfig, this);
        pf_foulDao = new pf_foulDao(pf_foulDaoConfig, this);

        registerDao(dl_referee.class, dl_refereeDao);
        registerDao(pf_athlete.class, pf_athleteDao);
        registerDao(pf_group.class, pf_groupDao);
        registerDao(pf_foul.class, pf_foulDao);
    }
    
    public void clear() {
        dl_refereeDaoConfig.getIdentityScope().clear();
        pf_athleteDaoConfig.getIdentityScope().clear();
        pf_groupDaoConfig.getIdentityScope().clear();
        pf_foulDaoConfig.getIdentityScope().clear();
    }

    public dl_refereeDao getDl_refereeDao() {
        return dl_refereeDao;
    }

    public pf_athleteDao getPf_athleteDao() {
        return pf_athleteDao;
    }

    public pf_groupDao getPf_groupDao() {
        return pf_groupDao;
    }

    public pf_foulDao getPf_foulDao() {
        return pf_foulDao;
    }

}
